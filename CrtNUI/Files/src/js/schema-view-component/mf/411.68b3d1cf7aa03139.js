(self.webpackChunkapp_studio_enterprise_schema_view=self.webpackChunkapp_studio_enterprise_schema_view||[]).push([[411],{55041:(ve,w,i)=>{i.r(w),i.d(w,{FolderTreeActiveFolderChangedHandler:()=>N,FolderTreeAddFolderDataHandler:()=>f,FolderTreeConvertToStaticFolderHandler:()=>y,FolderTreeCopyFolderDataHandler:()=>S,FolderTreeDeleteFolderDataHandler:()=>A,FolderTreeExpandedItemsHandler:()=>M,FolderTreeModule:()=>_,FolderTreeRenameHandler:()=>I,FolderTreeToggleFolderFavoriteHandler:()=>D,FolderTreeUpdateFiltersHandler:()=>H,FolderTreeVisibleHandler:()=>R});var s=i(74742),E=i(31134),a=i(75378),V=i(33177),p=i(34038),m=i(8239),v=i(49475),l=i(21322);let N=class extends a.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_isNeedSaveToProfile(e){const t=e.$context,{activeFolderIdAttrName:r}=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName);return t.attributes[r]!==e.id}handle(e){var t=this;return(0,m.Z)(function*(){t._isNeedSaveToProfile(e)&&(yield t._folderTreeUserProfileService.setFolderTreeSelectedNode(e.folderTreeName,e.id,e.isFavorite));const r=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName),o=e.$context;return(0,l.lastValueFrom)(o.setValue({[e.activeFolderIdAttrName??r.activeFolderIdAttrName]:e.id,[e.activeFolderNameAttrName??r.activeFolderNameAttrName]:e.name,[e.activeFolderFavoriteStateAttrName??r.activeFolderFavoriteStateAttrName]:e.isFavorite}),{defaultValue:null})})()}};N=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeActiveFolderChangedHandler",requestType:"crt.FolderTreeActiveFolderChangedRequest"}),(0,s.__metadata)("design:paramtypes",[p.FolderTreeUserProfileService])],N);var d=i(94450),F=i(27049),C=i(24709),b=i(99293),g=i(97600);class h{constructor(e,t){this._ngZone=e,this._dialogService=t}_reloadMainDs(e,t){const r=e.getBoundDataSourceNameByAttributePath(t.itemsAttrName);return e.load(r,[],{loadType:a.DataSourceLoadType.Reload})}_reloadFavoritesDs(e,t){const r=e.$context;if(e.reloadFavorites){const o=r.getBoundDataSourceNameByAttributePath(t.favoriteItemsAttrName);return r.load(o,[],{loadType:a.DataSourceLoadType.Reload})}return(0,l.of)({})}_getErrorMessage(e){const t=e.errorInfo;return e.message||((0,g.isString)(t)?t:t.message)}handle(e,t,r){const o=t.$context,n=(0,v.buildFolderTreeAttributeNames)(t.folderTreeName);return(0,l.lastValueFrom)(e.pipe((0,F.mergeMap)(()=>(0,l.concat)([this._reloadMainDs(o,n),this._reloadFavoritesDs(t,n)])),(0,F.concatAll)(),(0,F.catchError)(u=>this.handleError(u,t,r))),{defaultValue:null})}handleError(e,t,r){var o=this;const n=t.$context,u=(0,v.buildFolderTreeAttributeNames)(t.folderTreeName),O=this._getErrorMessage(e);return this._ngZone.run(()=>this._dialogService.openInfoDialog(O)).subscribe({next:function(){var j=(0,m.Z)(function*(){yield r?.process({type:"crt.FolderTreeActiveFolderChangedRequest",folderTreeName:t.folderTreeName,$context:t.$context}),yield(0,l.lastValueFrom)(o._reloadMainDs(n,u),{defaultValue:null}),yield(0,l.lastValueFrom)(o._reloadFavoritesDs(t,u),{defaultValue:null})});return function(){return j.apply(this,arguments)}}()}),(0,l.of)({})}}h.\u0275fac=function(e){return new(e||h)(d.\u0275\u0275inject(d.NgZone),d.\u0275\u0275inject(b.DialogService))},h.\u0275prov=d.\u0275\u0275defineInjectable({token:h,factory:h.\u0275fac,providedIn:"any"});var P=i(2876),U=i(77207);class T{constructor(){this._userInfo=(0,d.inject)(v.UserInfo),this._featureValues=(0,d.inject)(v.FEATURE_VALUES),this._httpClient=(0,d.inject)(P.HttpClient),this._translateService=(0,d.inject)(U.TranslateService),this._serviceEndpoint=(this._userInfo.isSSP?"ssp/":"")+"rest/FolderManagerService/"}_asyncConvert(e){return this._callService("ConvertToStaticFolder",e).pipe((0,l.map)(t=>(t?.success&&(t.additionalNotification=this._translateService.instant("StaticFolderConvertor.AsyncConvertMessage")),t)))}_convert(e){return this._callService("ConvertFolder",e).pipe((0,l.map)(t=>(t||(t={success:!0}),t)))}_callService(e,t){const r=`${this._serviceEndpoint}${e}`,o=`${e}Result`;return this._httpClient.post(r,{newFolderId:t.newFolderId,parentFolderId:t.parentFolderId,entitySchemaName:t.rootSchemaName}).pipe((0,l.map)(n=>n[o]),(0,l.catchError)(n=>this._catchHttpErrorResponse(n)))}_catchHttpErrorResponse(e){return(0,l.of)({success:!1,errorInfo:{message:e.error?.errorInfo?.message??e.message}})}convert(e){return this._featureValues.ConvertDynamicToStaticFolderByChunk?this._asyncConvert(e):this._convert(e)}}T.\u0275fac=function(e){return new(e||T)},T.\u0275prov=d.\u0275\u0275defineInjectable({token:T,factory:T.\u0275fac});class x extends a.BaseRequestHandler{constructor(e){super(),this.modelRequestService=e.get(h)}insertModel(e){return(0,m.Z)(function*(){const t=yield(0,l.lastValueFrom)(C.Model.create(e.sourceSchemaName));let r={Id:e.folderId,Name:e.folderName,Parent:e.parentId};return(0,p.isOldSourceSchema)(e.sourceSchemaName)?r={...r,FolderType:e.folderTypeId||p.DYNAMIC_FOLDER_TYPE_ID,SearchData:e.filterData}:r={...r,EntitySchemaName:e.rootSchemaName,FilterData:e.filterData},t.insert(r)})()}}let f=class extends x{constructor(e){super(e)}handle(e){var t=this;return(0,m.Z)(function*(){const r=e.$context,o=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName).itemsAttrName,n=r.getBoundDataSourceNameByAttributePath(o);return(0,l.lastValueFrom)((yield t.insertModel(e)).pipe((0,F.switchMap)(()=>r.load(n,[],{loadType:a.DataSourceLoadType.Reload})),(0,F.catchError)(u=>t.modelRequestService.handleError(u,e,t.handlerChain))),{defaultValue:null})})()}};f.\u0275fac=function(e){return new(e||f)(d.\u0275\u0275inject(d.Injector))},f.\u0275prov=d.\u0275\u0275defineInjectable({token:f,factory:f.\u0275fac,providedIn:"any"}),f=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeAddFolderDataHandler",requestType:"crt.AddFolderDataRequest"}),(0,s.__metadata)("design:paramtypes",[d.Injector])],f);let y=class extends a.BaseRequestHandler{constructor(e,t,r){super(),this._staticFolderConvertor=e,this._notifyService=t,this._maskService=r}_addNewFolder(e){return this.handlerChain.process({...e,type:"crt.AddFolderDataRequest"})}_isAddFolderResultFailed(e){return(0,g.isObject)(e)&&!e.rowsAffected||!(0,g.isObject)(e)&&e!==null}_convert(e){return this._showLoadingMask(e),(0,l.lastValueFrom)(this._staticFolderConvertor.convert({newFolderId:e.folderId,parentFolderId:e.parentId,rootSchemaName:e.rootSchemaName}).pipe((0,l.tap)(()=>this._hideLoadingMask(e))))}_showLoadingMask(e){this._maskService.showMask(this._getTaskName(e.rootSchemaName),e.$context)}_hideLoadingMask(e){this._maskService.hideMask(this._getTaskName(e.rootSchemaName),e.$context)}_getTaskName(e){return`ConvertToStaticFolder_${e}`}_notify(e){let t="";if(e.success&&e.additionalNotification)t=e.additionalNotification;else if(!e.success)t=e.errorInfo?.message;else return;this._notifyService.show({message:t,translate:!1})}_refreshDataSource(e){return(0,m.Z)(function*(){const t=e.$context,r=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName),o=t.getBoundDataSourceNameByAttributePath(r.itemsAttrName);yield(0,l.lastValueFrom)(t.load(o,[],{loadType:a.DataSourceLoadType.Reload}))})()}handle(e){var t=this;return(0,m.Z)(function*(){const r=yield t._addNewFolder(e);if(t._isAddFolderResultFailed(r))return;const o=yield t._convert(e);return t._notify(o),yield t._refreshDataSource(e),o})()}};y.\u0275fac=function(e){return new(e||y)(d.\u0275\u0275inject(T),d.\u0275\u0275inject(b.NotifyService),d.\u0275\u0275inject(a.MaskService))},y.\u0275prov=d.\u0275\u0275defineInjectable({token:y,factory:y.\u0275fac}),y=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeConvertToStaticFolderHandler",requestType:"crt.ConvertToStaticFolderRequest"}),(0,s.__param)(2,(0,a.CrtInject)(v.DEVKIT_MASK_SERVICE)),(0,s.__metadata)("design:paramtypes",[T,b.NotifyService,a.MaskService])],y);var J=i(41307);let S=class extends x{constructor(e){super(e),this._rightsService=e.get(J.RightsService)}handle(e){var t=this;return(0,m.Z)(function*(){const r=e.$context,o=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName).itemsAttrName,n=r.getBoundDataSourceNameByAttributePath(o);return(0,l.lastValueFrom)((yield t.insertModel(e)).pipe((0,F.switchMap)(()=>e.copyRights&&e.folderId?t._rightsService.copyRights({schemaName:e.sourceSchemaName,sourceId:e.sourceId,targetId:e.folderId,options:{overwrite:!1}}):(0,l.of)({})),(0,F.switchMap)(()=>r.load(n,[],{loadType:a.DataSourceLoadType.Reload})),(0,F.catchError)(u=>t.modelRequestService.handleError(u,e,t.handlerChain))),{defaultValue:null})})()}};S.\u0275fac=function(e){return new(e||S)(d.\u0275\u0275inject(d.Injector))},S.\u0275prov=d.\u0275\u0275defineInjectable({token:S,factory:S.\u0275fac}),S=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeCopyFolderDataHandler",requestType:"crt.CopyFolderDataRequest"}),(0,s.__metadata)("design:paramtypes",[d.Injector])],S);let A=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(h)}handle(e){const r=e.$context.delete(e.dataSourceName,[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return this._modelRequestService.handle(r,e)}};A=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeDeleteFolderDataHandler",requestType:"crt.DeleteFolderDataRequest"}),(0,s.__metadata)("design:paramtypes",[d.Injector])],A);let M=class extends a.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}handle(e){var t=this;return(0,m.Z)(function*(){yield t._folderTreeUserProfileService.setFolderTreeExpandedItems(e.folderTreeName,e.expandedItems);const r=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName),o=e.$context;return(0,l.firstValueFrom)(o.setValue({[r.expandedItemsAttrName]:e.expandedItems}))})()}};M=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeExpandedItemsHandler",requestType:"crt.FolderTreeExpandedItemsRequest"}),(0,s.__metadata)("design:paramtypes",[p.FolderTreeUserProfileService])],M);let I=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(h)}handle(e){var t=this;return(0,m.Z)(function*(){const o=(yield(0,l.lastValueFrom)(C.Model.create(e.sourceSchemaName))).update({Name:e.folderName},[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return t._modelRequestService.handle(o,e,t.handlerChain)})()}};I=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeRenameHandler",requestType:"crt.FolderTreeRenameRequest"}),(0,s.__metadata)("design:paramtypes",[d.Injector])],I);let D=class extends a.BaseRequestHandler{_getReloadDataSourceOperator(e){const t=e.$context,r=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName),o=t.getBoundDataSourceNameByAttributePath(r.favoriteItemsAttrName);return(0,F.mergeMap)(()=>t.load(o,[],{loadType:a.DataSourceLoadType.Reload}))}_getEntitySchemaUId(e){return(0,l.lastValueFrom)(this._entitySchemaService.getEntitySchemaByName(e).pipe((0,F.map)(t=>t.entitySchema.uId)))}_insertFolder(e,t,r){var o=this;return(0,m.Z)(function*(){let n={};if((0,p.isOldSourceSchema)(e.sourceSchemaName)){const u=yield o._getEntitySchemaUId(e.sourceSchemaName);n={FolderId:e.id,FolderEntitySchemaUId:u}}else n={FolderTree:e.id,EntitySchemaName:e.rootSchemaName};return(0,l.lastValueFrom)(t.insert(n).pipe(r))})()}_deleteFolder(e,t,r){return(0,l.lastValueFrom)(t.delete([{type:a.ModelParameterType.PrimaryColumnValue,value:e.favoriteId}]).pipe(r))}constructor(e){super(),this._entitySchemaService=e}handle(e){var t=this;return(0,m.Z)(function*(){const r=(0,p.isOldSourceSchema)(e.sourceSchemaName)?p.OLD_FOLDER_TREE_FAVORITE_SCHEMA_NAME:p.DEFAULT_FOLDER_TREE_FAVORITE_SCHEMA_NAME,o=yield(0,l.lastValueFrom)(C.Model.create(r)),n=t._getReloadDataSourceOperator(e);return e.status?t._insertFolder(e,o,n):t._deleteFolder(e,o,n)})()}};D=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.ToggleFolderFavoriteHandler",requestType:"crt.ToggleFolderFavoriteRequest"}),(0,s.__metadata)("design:paramtypes",[v.EntitySchemaService])],D);let H=class extends a.BaseRequestHandler{constructor(e){super(),this._modelRequestService=e.get(h)}handle(e){var t=this;return(0,m.Z)(function*(){const r=yield(0,l.lastValueFrom)(C.Model.create(e.sourceSchemaName));let o={};(0,p.isOldSourceSchema)(e.sourceSchemaName)?o={SearchData:e.filterData}:o={FilterData:e.filterData};const n=r.update(o,[{type:a.ModelParameterType.PrimaryColumnValue,value:e.folderId}]);return t._modelRequestService.handle(n,e)})()}};H=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeUpdateFiltersHandler",requestType:"crt.FolderTreeUpdateFiltersRequest"}),(0,s.__metadata)("design:paramtypes",[d.Injector])],H);let R=class extends a.BaseRequestHandler{constructor(e){super(),this._folderTreeUserProfileService=e}_getIsIsFolderTreeVisible(e,t){return(0,m.Z)(function*(){const r=e.$context;let o=e.visible;if(e.togglePanel){let n=yield r[t];n=(0,g.isNil)(n)?!1:n,o=!n}return o})()}_setFolderTreeVisible(e,t,r,o,n){var u=this;return(0,m.Z)(function*(){u._folderTreeUserProfileService.setFolderTreeVisibleState(o,t);const O=e.setValue({[r]:t});if(t){const j=u._reloadDataSource(e,n);return(0,l.lastValueFrom)(O.pipe(j),{defaultValue:null})}return(0,l.lastValueFrom)(O,{defaultValue:null})})()}_reloadDataSource(e,t){const r=e.getBoundDataSourceNameByAttributePath(t);return(0,F.mergeMap)(()=>e.load(r,[],{loadType:a.DataSourceLoadType.Reload}))}handle(e){var t=this;return(0,m.Z)(function*(){const r=(0,v.buildFolderTreeAttributeNames)(e.folderTreeName),o=r.visibleAttrName,n=e.$context,u=yield t._getIsIsFolderTreeVisible(e,o);return t._setFolderTreeVisible(n,u,o,e.folderTreeName,r.itemsAttrName)})()}};R=(0,s.__decorate)([(0,a.CrtRequestHandler)({type:"crt.FolderTreeVisibleHandler",requestType:"crt.FolderTreeVisibleRequest"}),(0,s.__metadata)("design:paramtypes",[p.FolderTreeUserProfileService])],R);const B=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),L=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),$=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),W=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),k=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Nous vous informerons lorsque la conversion sera termin\xE9e."}}'),K=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),z=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Y=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),G=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),Q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),X=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),q=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ee=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),te=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"Iremos notific\xE1-lo quando a convers\xE3o for conclu\xEDda."}}'),re=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),oe=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ae=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u044B \u0441\u043E\u043E\u0431\u0449\u0438\u043C \u0432\u0430\u043C, \u043A\u043E\u0433\u0434\u0430 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0438\u044F \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430."}}'),ne=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),le=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),de=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),se=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ce=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"\u041C\u0438 \u043F\u043E\u0432\u0456\u0434\u043E\u043C\u0438\u043C\u043E \u0432\u0430\u043C, \u043A\u043E\u043B\u0438 \u043A\u043E\u043D\u0432\u0435\u0440\u0442\u0430\u0446\u0456\u044E \u0431\u0443\u0434\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E."}}'),ie=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),me=JSON.parse('{"StaticFolderConvertor":{"AsyncConvertMessage":"We will notify you when the convertation is completed."}}'),ue={"ar-SA":B,"cs-CZ":L,"de-DE":$,"en-US":W,"es-ES":Z,"fr-FR":k,"he-IL":K,"hu-HU":z,"id-ID":Y,"it-IT":G,"ja-JP":Q,"ko-KR":X,"nl-NL":q,"pl-PL":ee,"pt-BR":te,"pt-PT":re,"ro-RO":oe,"ru-RU":ae,"sq-AL":ne,"sv-SE":le,"th-TH":de,"tr-TR":se,"uk-UA":ce,"vi-VN":ie,"zh-CN":me};let _=class{};_.\u0275fac=function(e){return new(e||_)},_.\u0275mod=d.\u0275\u0275defineNgModule({type:_}),_.\u0275inj=d.\u0275\u0275defineInjector({providers:[p.FolderTreeUserProfileService,T],imports:[E.CommonModule,V.CrtLibTranslateModule.forRoot({i18n:ue})]}),_=(0,s.__decorate)([(0,a.CrtModule)({requestHandlers:[N,f,A,M,I,D,H,R,S,y]})],_),function(){(typeof ngJitMode>"u"||ngJitMode)&&d.\u0275\u0275setNgModuleScope(_,{imports:[E.CommonModule,V.CrtLibTranslateModule]})}()}}]);
